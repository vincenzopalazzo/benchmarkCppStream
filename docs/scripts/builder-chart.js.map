{"version":3,"sources":["builder-chart.js"],"names":["RES_PATH","colors","backgroundColor","borderColor","loadNum","BuilderChart","idCanvas","typeChart","labels","chart","Chart","type","data","borderWidth","options","scales","yAxes","ticks","beginAtZero","self","path","dao","DAOLocalFile","configData","loadFile","then","config","files","results","console","debug","forEach","file","promisseFile","dataFile","updateBarGraph","replace","benchmarks","loadConfigurator","label","color","datasets","push","update"],"mappings":"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","sourcesContent":["\n\"use strict\";\n\nvar RES_PATH = \"res/\";\n\nlet colors = {\n    backgroundColor: [\n      'rgba(255, 99, 132, 0.2)',\n      'rgba(54, 162, 235, 0.2)',\n      'rgba(255, 206, 86, 0.2)',\n      'rgba(75, 192, 192, 0.2)',\n      'rgba(153, 102, 255, 0.2)',\n      'rgba(255, 159, 64, 0.2)'\n    ],\n    borderColor: [\n      'rgba(255, 99, 132, 1)',\n      'rgba(54, 162, 235, 1)',\n      'rgba(255, 206, 86, 1)',\n      'rgba(75, 192, 192, 1)',\n      'rgba(153, 102, 255, 1)',\n      'rgba(255, 159, 64, 1)'\n    ]\n  };\n\nlet loadNum = -1;\n\nclass BuilderChart{\n\n    constructor(idCanvas, typeChart, labels){\n        this.idCanvas = idCanvas;\n        this.typeChart = typeChart;\n        this.labels = labels;\n\n        this.chart = new Chart(this.idCanvas, {\n            type: this.typeChart,\n            data: {\n              labels: this.labels,\n            },\n            borderWidth: 2,\n            options: {\n              scales: {\n                yAxes: [{\n                  ticks: {\n                    beginAtZero: true\n                  }\n                }]\n              }\n            }\n          });\n    }\n\n    loadConfigurator(){\n        let self = this;\n        let path = RES_PATH +  \"demo-conf.json\";\n        let dao = new DAOLocalFile(path);\n        let configData = dao.loadFile(path);\n        configData.then(config => {\n            let files = config.results;\n            console.debug('files: ' + files) \n            files.forEach(function(file) {\n                let promisseFile = dao.loadFile(RES_PATH + file);\n                promisseFile.then(dataFile => {\n                    console.debug(\"The object file is: \" + dataFile);\n                    loadNum++;\n                    self.updateBarGraph(file.replace('.json', ''), colors.backgroundColor[loadNum], colors.borderColor[loadNum],\n                    [\n                        dataFile.benchmarks[0]['real_time'] / 1000000000.0,\n                        dataFile.benchmarks[1]['real_time'] / 1000000000.0,\n                        dataFile.benchmarks[2]['real_time'] / 1000000000.0,\n                        dataFile.benchmarks[3]['real_time'] / 1000000000.0,\n                        dataFile.benchmarks[4]['real_time'] / 1000000000.0,\n                        dataFile.benchmarks[5]['real_time'] / 1000000000.0,\n                        dataFile.benchmarks[6]['real_time'] / 1000000000.0,\n                        \n                    ]\n                    );\n                })\n            });\n           \n\n        });\n    }\n\n    buildChart(){\n        this.loadConfigurator();\n    }\n\n    updateBarGraph(label, color, borderColor, data) {\n        this.chart.data.datasets.push({\n          label: label,\n          backgroundColor: color,\n          borderColor: borderColor,\n          data: data\n        });\n        this.chart.update();\n      }\n\n}"],"file":"builder-chart.js"}